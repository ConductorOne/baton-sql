---
app_name: Wordpress
connect:
  dsn: "mysql://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?charset=utf8mb4&parseTime=True&loc=Local"
resource_types:
  user:
    name: "User"
    description: "A user within the wordpress system"
    list:
      query: |
        SELECT
          u.ID AS user_id,
          u.user_login AS username,
          u.user_email AS email,
          u.user_registered AS created_at
        FROM wp_users u
        LIMIT ?<Limit> OFFSET ?<Offset>
      map:
        id: ".user_id"
        display_name: ".username"
        description: ".email"
        traits:
          user:
            emails:
              - ".email"
            status: "active"
            status_details: "'detailed status'"
            login: ".username"
            profile:
              name: ".username"
              created_at: ".created_at"
      pagination:
        strategy: "offset"
        primary_key: "ID"

  role:
    name: "Role"
    description: "A role within the wordpress system that can be assigned to a user"
    list:
      query: |
        SELECT DISTINCT
          um.meta_value AS role_name
        FROM wp_usermeta um
        WHERE um.meta_key = 'wp_capabilities'
        AND um.meta_value != 'a:0:{}'
        LIMIT ?<Limit> OFFSET ?<Offset>
      map:
        id: "phpDeserializeStringArray(string(.role_name))[0]"
        display_name: "titleCase(phpDeserializeStringArray(string(.role_name))[0]) + ' Role'"
        description: "'Wordpress role for user'"
        traits:
          role:
      pagination:
        strategy: "offset"
        primary_key: "meta_value"

    static_entitlements:
      - id: "member"
        display_name: "resource.DisplayName + ' Role Member'"
        description: "'Member of the ' + resource.DisplayName + ' role'"
        slug: "member"
        purpose: "assignment"
        grantable_to:
          - "user"
    entitlements:
      query: |
        SELECT
          u.ID AS user_id,
          u.user_login AS username,
          um.meta_value AS role_name
        FROM wp_users u
        JOIN wp_usermeta um ON u.ID = um.user_id
        WHERE um.meta_key = 'wp_capabilities'
        LIMIT ?<Limit> OFFSET ?<Offset>
      map:
        id: ".user_id"            # Mapping user ID to entitlement ID
        display_name: ".username"  # Using user_login as display name
        description: "'Role entitlement for user'"
        slug: "slug"
        grantable_to:
          - "user"
        immutable: true
      pagination:
        strategy: "offset"
        primary_key: "ID"

    grants:
      query: |
        SELECT
          u.ID AS user_id,
          u.user_login AS username,
          um.meta_value AS role_name
        FROM wp_users u
        JOIN wp_usermeta um ON u.ID = um.user_id
        WHERE um.meta_key = 'wp_capabilities'
        LIMIT ?<Limit> OFFSET ?<Offset>
      map:
        principal_id: ".user_id"       # User ID as principal ID
        principal_type: "user"       # Static principal type (users)
        entitlement_id: ".role_name"      # Role entitlement for user
        annotations:
          entitlement_immutable:
            value: true
      pagination:
        strategy: "offset"
        primary_key: "ID"